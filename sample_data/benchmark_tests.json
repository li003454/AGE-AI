[
  {
    "query": "Train a decision tree on my dataset",
    "expected_function": "DecisionTreeClassifier"
  },
  {
    "query": "Apply linear regression on the data",
    "expected_function": "LinearRegression"
  },
  {
    "query": "Cluster data using k-means algorithm",
    "expected_function": "KMeans"
  },
  {
    "query": "Perform principal component analysis",
    "expected_function": "PCA"
  },
  {
    "query": "Run support vector machine classification",
    "expected_function": "SVC"
  },
  {
    "query": "Build a random forest model",
    "expected_function": "RandomForestClassifier"
  },
  {
    "query": "Implement logistic regression for classification",
    "expected_function": "LogisticRegression"
  },
  {
    "query": "Use a neural network for image classification",
    "expected_function": "MLPClassifier"
  },
  {
    "query": "Apply decision tree regression",
    "expected_function": "DecisionTreeRegressor"
  },
  {
    "query": "Perform k-nearest neighbors classification",
    "expected_function": "KNeighborsClassifier"
  },
  {
    "query": "Conduct clustering with DBSCAN",
    "expected_function": "DBSCAN"
  },
  {
    "query": "Forecast time series using ARIMA model",
    "expected_function": "ARIMA"
  }
]
