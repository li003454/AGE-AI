[
    {
      "name": "lm",
      "language": "r",
      "package": "stats",
      "description": "Fits linear models based on the given formula and data. Returns an lm object that includes coefficients, residuals, and other model details."
    },
    {
      "name": "glm",
      "language": "r",
      "package": "stats",
      "description": "Fits generalized linear models specified by a formula and family. Allows modeling of various distributions like binomial or Poisson."
    },
    {
      "name": "aov",
      "language": "r",
      "package": "stats",
      "description": "Performs analysis of variance (ANOVA) for examining the relationship between factors and a continuous response variable."
    },
    {
      "name": "step",
      "language": "r",
      "package": "stats",
      "description": "Performs stepwise model selection by AIC. Iteratively adds or removes terms to find an optimal model."
    },
    {
      "name": "anova",
      "language": "r",
      "package": "stats",
      "description": "Compares two or more fitted models or provides an analysis of variance table for a fitted model, useful in hypothesis testing."
    },
    {
      "name": "cor",
      "language": "r",
      "package": "stats",
      "description": "Computes correlation coefficients between paired data, supporting multiple methods including Pearson, Spearman, and Kendall."
    },
    {
      "name": "acf",
      "language": "r",
      "package": "stats",
      "description": "Computes and plots the autocorrelation function of a time series to help identify correlation patterns across lags."
    },
    {
      "name": "pacf",
      "language": "r",
      "package": "stats",
      "description": "Computes and plots the partial autocorrelation function of a time series to help in ARIMA model order selection."
    },
    {
      "name": "arima",
      "language": "r",
      "package": "stats",
      "description": "Fits ARIMA models to time series data using maximum likelihood estimation. Can handle seasonal and non-seasonal data."
    },
    {
      "name": "predict.lm",
      "language": "r",
      "package": "stats",
      "description": "Generates predictions from a fitted linear model (lm). Accepts new data and returns predicted values with optional confidence intervals."
    },
    {
      "name": "mean",
      "language": "r",
      "package": "base",
      "description": "Computes the arithmetic mean of a numeric vector, with optional removal of missing values."
    },
    {
      "name": "sd",
      "language": "r",
      "package": "base",
      "description": "Calculates the sample standard deviation of a numeric vector by default using n-1 in the denominator."
    },
    {
      "name": "summary",
      "language": "r",
      "package": "base",
      "description": "Generates a summary of an object, such as a numeric vector or model, including key statistics or coefficients."
    },
    {
      "name": "table",
      "language": "r",
      "package": "base",
      "description": "Builds contingency tables of counts at each combination of factor levels, useful for cross-tabulation of categorical data."
    },
    {
      "name": "sample",
      "language": "r",
      "package": "base",
      "description": "Randomly selects elements from a vector or generates random permutations, often used for data splitting or random sampling."
    },
    {
      "name": "lda",
      "language": "r",
      "package": "MASS",
      "description": "Performs linear discriminant analysis for dimensionality reduction and classification using Bayes' rule and normal assumptions."
    },
    {
      "name": "qda",
      "language": "r",
      "package": "MASS",
      "description": "Carries out quadratic discriminant analysis, relaxing the equal covariance matrix assumption in linear discriminant analysis."
    },
    {
      "name": "stepAIC",
      "language": "r",
      "package": "MASS",
      "description": "Conducts stepwise model selection via AIC, adding or removing predictors to find a parsimonious model."
    },
    {
      "name": "fractions",
      "language": "r",
      "package": "MASS",
      "description": "Expresses numeric values as rational approximations, displaying them in fractional form."
    },
    {
      "name": "fitdistr",
      "language": "r",
      "package": "MASS",
      "description": "Estimates parameters of univariate distributions (normal, Poisson, etc.) by maximum likelihood."
    },
    {
      "name": "vif",
      "language": "r",
      "package": "car",
      "description": "Computes variance inflation factors for linear regression models to assess multicollinearity among predictors."
    },
    {
      "name": "Anova",
      "language": "r",
      "package": "car",
      "description": "Provides type-II or type-III analysis-of-variance tables for linear and generalized linear models."
    },
    {
      "name": "linearHypothesis",
      "language": "r",
      "package": "car",
      "description": "Tests linear hypotheses about the parameters of a linear or generalized linear model using an ANOVA-like table."
    },
    {
      "name": "deltaMethod",
      "language": "r",
      "package": "car",
      "description": "Applies the Delta method for approximating the variance of a transformed parameter estimate."
    },
    {
      "name": "qqPlot",
      "language": "r",
      "package": "car",
      "description": "Generates a quantile-quantile plot with confidence envelope to compare sample data with a theoretical distribution."
    },
    {
      "name": "train",
      "language": "r",
      "package": "caret",
      "description": "Unified interface to train predictive models using different algorithms. Handles parameter tuning and resampling automatically."
    },
    {
      "name": "trainControl",
      "language": "r",
      "package": "caret",
      "description": "Sets up control parameters for the train function, specifying resampling methods, performance metrics, etc."
    },
    {
      "name": "preProcess",
      "language": "r",
      "package": "caret",
      "description": "Applies data preprocessing steps such as centering, scaling, PCA, or imputation before model training."
    },
    {
      "name": "varImp",
      "language": "r",
      "package": "caret",
      "description": "Computes variable importance measures for various trained models, helping to interpret which predictors matter most."
    },
    {
      "name": "createDataPartition",
      "language": "r",
      "package": "caret",
      "description": "Splits data into training/testing sets while preserving the overall class distribution, often used in classification tasks."
    },
    {
      "name": "randomForest",
      "language": "r",
      "package": "randomForest",
      "description": "Trains a random forest classifier or regressor by aggregating multiple decision trees, improving stability and accuracy."
    },
    {
      "name": "importance",
      "language": "r",
      "package": "randomForest",
      "description": "Extracts variable importance measures from a randomForest object, indicating how much each predictor reduces error."
    },
    {
      "name": "tuneRF",
      "language": "r",
      "package": "randomForest",
      "description": "Tunes the mtry parameter (number of variables tried at each split) of a random forest by searching for the best OOB error."
    },
    {
      "name": "combine",
      "language": "r",
      "package": "randomForest",
      "description": "Combines two or more randomForest objects into one, effectively increasing the number of trees."
    },
    {
      "name": "getTree",
      "language": "r",
      "package": "randomForest",
      "description": "Extracts a single decision tree from a randomForest object in human-readable form."
    },
    {
      "name": "svm",
      "language": "r",
      "package": "e1071",
      "description": "Fits support vector machines for classification or regression, supporting linear, polynomial, and RBF kernels."
    },
    {
      "name": "naiveBayes",
      "language": "r",
      "package": "e1071",
      "description": "Trains a naive Bayes classifier, assuming conditional independence between features given the class label."
    },
    {
      "name": "tune",
      "language": "r",
      "package": "e1071",
      "description": "Generic function for parameter tuning, commonly used to find optimal SVM parameters like cost and gamma."
    },
    {
      "name": "best.tune",
      "language": "r",
      "package": "e1071",
      "description": "A convenience function wrapping tune, automatically returning the best model configuration based on performance."
    },
    {
      "name": "classAgreement",
      "language": "r",
      "package": "e1071",
      "description": "Evaluates inter-rater or classifier agreement using metrics like Cohen's Kappa, based on confusion matrices."
    },
    {
      "name": "glmnet",
      "language": "r",
      "package": "glmnet",
      "description": "Fits generalized linear models via penalized maximum likelihood, supporting elastic net regularization."
    },
    {
      "name": "cv.glmnet",
      "language": "r",
      "package": "glmnet",
      "description": "Performs k-fold cross-validation for glmnet models to select the optimal regularization parameter lambda."
    },
    {
      "name": "plot.glmnet",
      "language": "r",
      "package": "glmnet",
      "description": "Plots coefficient paths against the regularization parameter lambda, illustrating how coefficients shrink."
    },
    {
      "name": "predict.glmnet",
      "language": "r",
      "package": "glmnet",
      "description": "Generates predictions from a fitted glmnet model for new data or at specified values of lambda."
    },
    {
      "name": "coef.glmnet",
      "language": "r",
      "package": "glmnet",
      "description": "Extracts the coefficient matrix or vector from a fitted glmnet model at specific lambda values."
    },
    {
      "name": "gam",
      "language": "r",
      "package": "mgcv",
      "description": "Fits generalized additive models using penalized regression splines, supporting a variety of distributions."
    },
    {
      "name": "s",
      "language": "r",
      "package": "mgcv",
      "description": "Defines a smooth function term in a GAM formula, typically representing a univariate spline."
    },
    {
      "name": "te",
      "language": "r",
      "package": "mgcv",
      "description": "Specifies a tensor product smooth for interactions of multiple covariates in a GAM."
    },
    {
      "name": "bam",
      "language": "r",
      "package": "mgcv",
      "description": "Fits large GAMs to big data sets using a faster, more memory-efficient algorithm than gam."
    },
    {
      "name": "predict.gam",
      "language": "r",
      "package": "mgcv",
      "description": "Produces predictions from a fitted GAM object, optionally for new data, with confidence intervals if requested."
    },
    {
      "name": "nnet",
      "language": "r",
      "package": "nnet",
      "description": "Fits single-hidden-layer neural networks, supporting skip-layer connections and flexible activation functions."
    },
    {
      "name": "multinom",
      "language": "r",
      "package": "nnet",
      "description": "Fits multinomial log-linear models via neural networks, commonly used for multi-class classification."
    },
    {
      "name": "predict.nnet",
      "language": "r",
      "package": "nnet",
      "description": "Generates predictions from a fitted nnet or multinom object, returning class labels or probabilities."
    },
    {
      "name": "summary.nnet",
      "language": "r",
      "package": "nnet",
      "description": "Prints a summary of a fitted nnet model, including weights, architecture, and residual information."
    },
    {
      "name": "which.is.max",
      "language": "r",
      "package": "nnet",
      "description": "Identifies the index of the maximum element in a numeric vector, often used in multi-class probability predictions."
    },
    {
      "name": "pam",
      "language": "r",
      "package": "cluster",
      "description": "Performs partitioning around medoids, robustly clustering data points around representative medoids."
    },
    {
      "name": "clara",
      "language": "r",
      "package": "cluster",
      "description": "Adapts pam to large datasets by sampling subsets, providing an efficient approximation to partitioning around medoids."
    },
    {
      "name": "agnes",
      "language": "r",
      "package": "cluster",
      "description": "Agglomerative hierarchical clustering, merging clusters step by step to build a hierarchical dendrogram."
    },
    {
      "name": "diana",
      "language": "r",
      "package": "cluster",
      "description": "Divisive hierarchical clustering, starting from one cluster and splitting recursively."
    },
    {
      "name": "fanny",
      "language": "r",
      "package": "cluster",
      "description": "Fuzzy clustering method that allows partial membership of points in multiple clusters."
    },
    {
      "name": "auto.arima",
      "language": "r",
      "package": "forecast",
      "description": "Automatically fits the best ARIMA model to a univariate time series by searching over parameters and minimizing AICc."
    },
    {
      "name": "ets",
      "language": "r",
      "package": "forecast",
      "description": "Fits exponential smoothing state space models (ETS) to time series data, supporting additive or multiplicative errors."
    },
    {
      "name": "tbats",
      "language": "r",
      "package": "forecast",
      "description": "Fits TBATS models (Trigonometric seasonality, Box-Cox transformation, ARMA errors, Trend, Seasonal components) for complex seasonal data."
    },
    {
      "name": "stlf",
      "language": "r",
      "package": "forecast",
      "description": "Performs forecasting of a time series using STL decomposition plus a specified forecast model (e.g., ARIMA)."
    },
    {
      "name": "forecast",
      "language": "r",
      "package": "forecast",
      "description": "Generates point forecasts and prediction intervals from fitted time series models such as ARIMA or ETS objects."
    },
    {
      "name": "ggplot",
      "language": "r",
      "package": "ggplot2",
      "description": "Creates a new ggplot object to build layered, grammar-of-graphics style plots using data and aesthetic mappings."
    },
    {
      "name": "geom_point",
      "language": "r",
      "package": "ggplot2",
      "description": "Adds scatter plot points to a ggplot, commonly used to visualize relationships between two numeric variables."
    },
    {
      "name": "geom_line",
      "language": "r",
      "package": "ggplot2",
      "description": "Adds lines to a ggplot, typically used for time series or trend lines connecting consecutive observations."
    },
    {
      "name": "aes",
      "language": "r",
      "package": "ggplot2",
      "description": "Defines aesthetic mappings, specifying how data variables map to visual properties like x, y, color, or shape."
    },
    {
      "name": "theme",
      "language": "r",
      "package": "ggplot2",
      "description": "Controls non-data ink elements of a plot such as background, font, legends, axes, enabling custom styles."
    },
    {
      "name": "select",
      "language": "r",
      "package": "dplyr",
      "description": "Chooses columns from a data frame by name or helper functions, simplifying data subset tasks."
    },
    {
      "name": "filter",
      "language": "r",
      "package": "dplyr",
      "description": "Keeps rows matching specified logical criteria, enabling easy row-level subsetting."
    },
    {
      "name": "mutate",
      "language": "r",
      "package": "dplyr",
      "description": "Adds new columns or modifies existing columns in a data frame by applying transformations to existing variables."
    },
    {
      "name": "summarize",
      "language": "r",
      "package": "dplyr",
      "description": "Generates summary statistics for group(s) of data, typically used in conjunction with group_by."
    },
    {
      "name": "arrange",
      "language": "r",
      "package": "dplyr",
      "description": "Reorders rows of a data frame based on one or more columns, sorting in ascending or descending order."
    },
    {
      "name": "gather",
      "language": "r",
      "package": "tidyr",
      "description": "Reshapes data from wide to long format by collapsing multiple columns into key-value pairs."
    },
    {
      "name": "spread",
      "language": "r",
      "package": "tidyr",
      "description": "Transforms long data into wide format by distributing key-value pairs across multiple columns."
    },
    {
      "name": "pivot_longer",
      "language": "r",
      "package": "tidyr",
      "description": "A flexible approach to gather-like transformations, turning columns into rows while preserving data structure."
    },
    {
      "name": "pivot_wider",
      "language": "r",
      "package": "tidyr",
      "description": "Converts long data into a wider format, creating new columns from unique values of a key variable."
    },
    {
      "name": "separate",
      "language": "r",
      "package": "tidyr",
      "description": "Splits a single character column into multiple columns by a delimiter, often used for cleaning data fields."
    },
    {
      "name": "str_detect",
      "language": "r",
      "package": "stringr",
      "description": "Checks if a pattern occurs in each string of a character vector, returning a logical vector."
    },
    {
      "name": "str_subset",
      "language": "r",
      "package": "stringr",
      "description": "Returns only the elements of a character vector that match a given pattern, filtering out non-matching ones."
    },
    {
      "name": "str_replace",
      "language": "r",
      "package": "stringr",
      "description": "Replaces the first or all occurrences of a pattern in each string with a specified replacement."
    },
    {
      "name": "str_extract",
      "language": "r",
      "package": "stringr",
      "description": "Extracts text matching a pattern from each string in a character vector, returning the matched substring."
    },
    {
      "name": "str_split",
      "language": "r",
      "package": "stringr",
      "description": "Splits each element of a character vector into substrings based on a pattern, returning a list of vectors."
    },
    {
      "name": "ymd",
      "language": "r",
      "package": "lubridate",
      "description": "Parses dates in year-month-day format (e.g., 2023-01-15), automatically handling separators and returning a Date object."
    },
    {
      "name": "mdy",
      "language": "r",
      "package": "lubridate",
      "description": "Parses dates in month-day-year format, converting character strings into Date objects."
    },
    {
      "name": "dmy",
      "language": "r",
      "package": "lubridate",
      "description": "Parses dates in day-month-year format, recognizing various delimiters and returning a Date object."
    },
    {
      "name": "now",
      "language": "r",
      "package": "lubridate",
      "description": "Retrieves the current date-time as a POSIXct object, respecting system time zone settings."
    },
    {
      "name": "floor_date",
      "language": "r",
      "package": "lubridate",
      "description": "Rounds date-time objects down to a specified unit (e.g., day, month, hour), often used for grouping times."
    },
    {
      "name": "survfit",
      "language": "r",
      "package": "survival",
      "description": "Computes survival curves using the Kaplan-Meier or Fleming-Harrington method for right-censored data."
    },
    {
      "name": "coxph",
      "language": "r",
      "package": "survival",
      "description": "Fits a Cox proportional hazards model for survival data, relating hazard rates to covariates."
    },
    {
      "name": "Surv",
      "language": "r",
      "package": "survival",
      "description": "Creates a survival object, typically used as a response in models that handle right-censored survival times."
    },
    {
      "name": "survdiff",
      "language": "r",
      "package": "survival",
      "description": "Performs a log-rank test to compare two or more survival curves, checking for significant differences."
    },
    {
      "name": "cox.zph",
      "language": "r",
      "package": "survival",
      "description": "Tests the proportional hazards assumption in a Cox model by correlating scaled Schoenfeld residuals with time."
    },
    {
      "name": "rpart",
      "language": "r",
      "package": "rpart",
      "description": "Fits recursive partitioning and regression trees for classification or regression using Gini index or variance splits."
    },
    {
      "name": "printcp",
      "language": "r",
      "package": "rpart",
      "description": "Prints the CP (complexity parameter) table of an rpart object, showing splits and error metrics."
    },
    {
      "name": "plotcp",
      "language": "r",
      "package": "rpart",
      "description": "Plots the cross-validation results of an rpart model, helping to select the optimal complexity parameter."
    },
    {
      "name": "predict.rpart",
      "language": "r",
      "package": "rpart",
      "description": "Generates predictions or class probabilities from a fitted rpart tree for new data."
    },
    {
      "name": "rpart.control",
      "language": "r",
      "package": "rpart",
      "description": "Provides control parameters for rpart, such as minimum split size, maximum depth, and complexity parameter."
    }
  ]
  